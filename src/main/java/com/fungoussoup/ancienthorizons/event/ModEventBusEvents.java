package com.fungoussoup.ancienthorizons.event;

import com.fungoussoup.ancienthorizons.AncientHorizons;
import com.fungoussoup.ancienthorizons.entity.client.abstract_passerine.AbstractPasserineModel;
import com.fungoussoup.ancienthorizons.entity.client.anaconda.AnacondaModel;
import com.fungoussoup.ancienthorizons.entity.client.bactrian_camel.BactrianCamelModel;
import com.fungoussoup.ancienthorizons.entity.client.beipiaosaurus.BeipiaosaurusModel;
import com.fungoussoup.ancienthorizons.entity.client.beluga_sturgeon.BelugaSturgeonModel;
import com.fungoussoup.ancienthorizons.entity.client.brown_bear.BrownBearModel;
import com.fungoussoup.ancienthorizons.entity.client.carcharodon.WhiteSharkModel;
import com.fungoussoup.ancienthorizons.entity.client.chimp.ChimpanzeeModel;
import com.fungoussoup.ancienthorizons.entity.client.cicada.CicadaModel;
import com.fungoussoup.ancienthorizons.entity.client.croc.CrocodileModel;
import com.fungoussoup.ancienthorizons.entity.client.dearc.DearcModel;
import com.fungoussoup.ancienthorizons.entity.client.deer.DeerModel;
import com.fungoussoup.ancienthorizons.entity.client.domestic_goat.DomesticGoatModel;
import com.fungoussoup.ancienthorizons.entity.client.eagle.EagleModel;
import com.fungoussoup.ancienthorizons.entity.client.earthworm.EarthwormModel;
import com.fungoussoup.ancienthorizons.entity.client.elephant.ElephantModel;
import com.fungoussoup.ancienthorizons.entity.client.eromangasaurus.EromangasaurusModel;
import com.fungoussoup.ancienthorizons.entity.client.fisher.FisherModel;
import com.fungoussoup.ancienthorizons.entity.client.flamingo.FlamingoModel;
import com.fungoussoup.ancienthorizons.entity.client.gallimimus.GallimimusModel;
import com.fungoussoup.ancienthorizons.entity.client.giraffe.GiraffeModel;
import com.fungoussoup.ancienthorizons.entity.client.hare.HareModel;
import com.fungoussoup.ancienthorizons.entity.client.hippo.HippopotamusModel;
import com.fungoussoup.ancienthorizons.entity.client.hoatzin.HoatzinModel;
import com.fungoussoup.ancienthorizons.entity.client.hypnovenator.HypnovenatorModel;
import com.fungoussoup.ancienthorizons.entity.client.large_azhdarchid.CryodrakonModel;
import com.fungoussoup.ancienthorizons.entity.client.lion.LionModel;
import com.fungoussoup.ancienthorizons.entity.client.mantis.MantisModel;
import com.fungoussoup.ancienthorizons.entity.client.non_mob.DartModel;
import com.fungoussoup.ancienthorizons.entity.client.pangolin.PangolinModel;
import com.fungoussoup.ancienthorizons.entity.client.penguin.PenguinModel;
import com.fungoussoup.ancienthorizons.entity.client.pheasant.PheasantModel;
import com.fungoussoup.ancienthorizons.entity.client.raccoon.RaccoonModel;
import com.fungoussoup.ancienthorizons.entity.client.roadrunner.RoadrunnerModel;
import com.fungoussoup.ancienthorizons.entity.client.roe_deer.RoeDeerModel;
import com.fungoussoup.ancienthorizons.entity.client.ruff.RuffModel;
import com.fungoussoup.ancienthorizons.entity.client.saola.SaolaModel;
import com.fungoussoup.ancienthorizons.entity.client.sauropod.DiplodocusModel;
import com.fungoussoup.ancienthorizons.entity.client.seagull.SeagullModel;
import com.fungoussoup.ancienthorizons.entity.client.snow_leopard.SnowLeopardModel;
import com.fungoussoup.ancienthorizons.entity.client.stoat.StoatModel;
import com.fungoussoup.ancienthorizons.entity.client.tiger.TigerModel;
import com.fungoussoup.ancienthorizons.entity.client.velociraptor.VelociraptorModel;
import com.fungoussoup.ancienthorizons.entity.client.zebra_and_zebroid.ZebraModel;
import com.fungoussoup.ancienthorizons.entity.client.zebra_and_zebroid.ZonkeyModel;
import com.fungoussoup.ancienthorizons.entity.client.zebra_and_zebroid.ZorseModel;
import com.fungoussoup.ancienthorizons.entity.custom.mob.*;
import com.fungoussoup.ancienthorizons.entity.custom.mob.anaconda.AnacondaEntity;
import com.fungoussoup.ancienthorizons.entity.custom.mob.anaconda.AnacondaPartEntity;
import com.fungoussoup.ancienthorizons.entity.custom.mob.sauropoda.DiplodocusEntity;
import com.fungoussoup.ancienthorizons.entity.util.AnacondaPartIndex;
import net.minecraft.world.entity.SpawnPlacementTypes;
import net.minecraft.world.entity.animal.Animal;
import net.minecraft.world.entity.animal.horse.AbstractHorse;
import net.minecraft.world.level.levelgen.Heightmap;
import net.neoforged.bus.api.SubscribeEvent;
import net.neoforged.fml.common.EventBusSubscriber;
import net.neoforged.neoforge.client.event.EntityRenderersEvent;
import net.neoforged.neoforge.event.entity.EntityAttributeCreationEvent;
import net.neoforged.neoforge.event.entity.RegisterSpawnPlacementsEvent;

import static com.fungoussoup.ancienthorizons.entity.ModEntities.*;

@EventBusSubscriber(modid = AncientHorizons.MOD_ID, bus = EventBusSubscriber.Bus.MOD)
public class ModEventBusEvents {
    @SubscribeEvent
    public static void registerLayers(EntityRenderersEvent.RegisterLayerDefinitions event) {
        event.registerLayerDefinition(TigerModel.LAYER_LOCATION, TigerModel::createBodyLayer);
        event.registerLayerDefinition(SnowLeopardModel.LAYER_LOCATION, SnowLeopardModel::createBodyLayer);
        event.registerLayerDefinition(SnowLeopardModel.ARMOR_LOCATION, SnowLeopardModel::createBodyLayer);
        event.registerLayerDefinition(DomesticGoatModel.LAYER_LOCATION, DomesticGoatModel::createBodyLayer);
        event.registerLayerDefinition(GiraffeModel.LAYER_LOCATION, GiraffeModel::createBodyLayer);
        event.registerLayerDefinition(ZebraModel.LAYER_LOCATION, ZebraModel::createBodyLayer);
        event.registerLayerDefinition(ZorseModel.LAYER_LOCATION, ZorseModel::createBodyLayer);
        event.registerLayerDefinition(ZonkeyModel.LAYER_LOCATION, ZonkeyModel::createBodyLayer);
        event.registerLayerDefinition(AbstractPasserineModel.LAYER_LOCATION, AbstractPasserineModel::createBodyLayer);
        event.registerLayerDefinition(PangolinModel.LAYER_LOCATION, PangolinModel::createBodyLayer);
        event.registerLayerDefinition(ElephantModel.LAYER_LOCATION, ElephantModel::createBodyLayer);
        event.registerLayerDefinition(RaccoonModel.LAYER_LOCATION, RaccoonModel::createBodyLayer);
        event.registerLayerDefinition(EarthwormModel.LAYER_LOCATION, EarthwormModel::createBodyLayer);
        event.registerLayerDefinition(SeagullModel.LAYER_LOCATION, SeagullModel::createBodyLayer);
        event.registerLayerDefinition(PangolinModel.LAYER_LOCATION, PangolinModel::createBodyLayer);
        event.registerLayerDefinition(BrownBearModel.LAYER_LOCATION, BrownBearModel::createBodyLayer);
        event.registerLayerDefinition(MantisModel.LAYER_LOCATION, MantisModel::createBodyLayer);
        event.registerLayerDefinition(PenguinModel.LAYER_LOCATION, PenguinModel::createBodyLayer);
        event.registerLayerDefinition(EagleModel.LAYER_LOCATION, EagleModel::createBodyLayer);
        event.registerLayerDefinition(BactrianCamelModel.LAYER_LOCATION, BactrianCamelModel::createBodyLayer);
        event.registerLayerDefinition(BelugaSturgeonModel.LAYER_LOCATION, BelugaSturgeonModel::createBodyLayer);
        event.registerLayerDefinition(DartModel.LAYER_LOCATION, DartModel::createBodyLayer);
        event.registerLayerDefinition(PheasantModel.LAYER_LOCATION, PheasantModel::createBodyLayer);
        event.registerLayerDefinition(StoatModel.LAYER_LOCATION, StoatModel::createBodyLayer);
        event.registerLayerDefinition(ChimpanzeeModel.LAYER_LOCATION, ChimpanzeeModel::createBodyLayer);
        event.registerLayerDefinition(SaolaModel.LAYER_LOCATION, SaolaModel::createBodyLayer);
        event.registerLayerDefinition(CryodrakonModel.LAYER_LOCATION, CryodrakonModel::createBodyLayer);
        event.registerLayerDefinition(FlamingoModel.LAYER_LOCATION, FlamingoModel::createBodyLayer);
        event.registerLayerDefinition(AnacondaModel.LAYER_LOCATION, AnacondaModel::createBodyLayer);
        event.registerLayerDefinition(AnacondaModel.HEAD_LAYER_LOCATION, () -> AnacondaModel.createPartLayer(AnacondaPartIndex.HEAD));
        event.registerLayerDefinition(AnacondaModel.BODY_LAYER_LOCATION, () -> AnacondaModel.createPartLayer(AnacondaPartIndex.BODY));
        event.registerLayerDefinition(AnacondaModel.TAIL_LAYER_LOCATION, () -> AnacondaModel.createPartLayer(AnacondaPartIndex.TAIL));
        event.registerLayerDefinition(FisherModel.LAYER_LOCATION, FisherModel::createBodyLayer);
        event.registerLayerDefinition(RuffModel.LAYER_LOCATION, RuffModel::createBodyLayer);
        event.registerLayerDefinition(HoatzinModel.LAYER_LOCATION, HoatzinModel::createBodyLayer);
        event.registerLayerDefinition(DiplodocusModel.LAYER_LOCATION, DiplodocusModel::createBodyLayer);
        event.registerLayerDefinition(RoadrunnerModel.LAYER_LOCATION, RoadrunnerModel::createBodyLayer);
        event.registerLayerDefinition(CicadaModel.LAYER_LOCATION, CicadaModel::createBodyLayer);
        event.registerLayerDefinition(HareModel.LAYER_LOCATION, HareModel::createBodyLayer);
        event.registerLayerDefinition(HypnovenatorModel.LAYER_LOCATION, HypnovenatorModel::createBodyLayer);
        event.registerLayerDefinition(VelociraptorModel.LAYER_LOCATION, VelociraptorModel::createBodyLayer);
        event.registerLayerDefinition(DeerModel.LAYER_LOCATION, DeerModel::createBodyLayer);
        event.registerLayerDefinition(RoeDeerModel.LAYER_LOCATION, RoeDeerModel::createBodyLayer);
        event.registerLayerDefinition(GallimimusModel.LAYER_LOCATION, GallimimusModel::createBodyLayer);
        event.registerLayerDefinition(CrocodileModel.LAYER_LOCATION, CrocodileModel::createBodyLayer);
        event.registerLayerDefinition(HippopotamusModel.LAYER_LOCATION, HippopotamusModel::createBodyLayer);
        event.registerLayerDefinition(EromangasaurusModel.LAYER_LOCATION, EromangasaurusModel::createBodyLayer);
        event.registerLayerDefinition(DartModel.LAYER_LOCATION, DartModel::createBodyLayer);
        event.registerLayerDefinition(WhiteSharkModel.LAYER_LOCATION, WhiteSharkModel::createBodyLayer);
        event.registerLayerDefinition(BeipiaosaurusModel.LAYER_LOCATION, BeipiaosaurusModel::createBodyLayer);
        event.registerLayerDefinition(DearcModel.LAYER_LOCATION, DearcModel::createBodyLayer);
        event.registerLayerDefinition(LionModel.LAYER_LOCATION, LionModel::createBodyLayer);
    }

    @SubscribeEvent
    public static void registerAttributes(EntityAttributeCreationEvent event) {
        event.put(TIGER.get(), TigerEntity.createAttributes().build());
        event.put(SNOW_LEOPARD.get(), SnowLeopardEntity.createAttributes().build());
        event.put(DOMESTIC_GOAT.get(), DomesticGoatEntity.createAttributes().build());
        event.put(ZEBRA.get(), AbstractHorse.createBaseHorseAttributes().build());
        event.put(ZORSE.get(), AbstractHorse.createBaseHorseAttributes().build());
        event.put(ZONKEY.get(), AbstractHorse.createBaseHorseAttributes().build());
        event.put(EARTHWORM.get(), EarthwormEntity.createAttributes().build());
        event.put(BLACKCAP.get(), AbstractPasserineEntity.createAttributes().build());
        event.put(BLUETHROAT.get(), AbstractPasserineEntity.createAttributes().build());
        event.put(BULLFINCH.get(), AbstractPasserineEntity.createAttributes().build());
        event.put(CANARY.get(), AbstractPasserineEntity.createAttributes().build());
        event.put(CARDINAL.get(), AbstractPasserineEntity.createAttributes().build());
        event.put(CHAFFINCH.get(), AbstractPasserineEntity.createAttributes().build());
        event.put(GOLDCREST.get(), AbstractPasserineEntity.createAttributes().build());
        event.put(GOLDFINCH.get(), AbstractPasserineEntity.createAttributes().build());
        event.put(NIGHTINGALE.get(), AbstractPasserineEntity.createAttributes().build());
        event.put(REDSTART.get(), AbstractPasserineEntity.createAttributes().build());
        event.put(REEDLING.get(), AbstractPasserineEntity.createAttributes().build());
        event.put(ROBIN.get(), AbstractPasserineEntity.createAttributes().build());
        event.put(SISKIN.get(), AbstractPasserineEntity.createAttributes().build());
        event.put(SKYLARK.get(), AbstractPasserineEntity.createAttributes().build());
        event.put(SPARROW.get(), AbstractPasserineEntity.createAttributes().build());
        event.put(TIT.get(), AbstractPasserineEntity.createAttributes().build());
        event.put(WAGTAIL.get(), AbstractPasserineEntity.createAttributes().build());
        event.put(WAXWING.get(), AbstractPasserineEntity.createAttributes().build());
        event.put(ELEPHANT.get(), ElephantEntity.createAttributes().build());
        event.put(GIRAFFE.get(), GiraffeEntity.createAttributes().build());
        event.put(RACCOON.get(), RaccoonEntity.createAttributes().build());
        event.put(PANGOLIN.get(), PangolinEntity.createAttributes().build());
        event.put(SEAGULL.get(), SeagullEntity.createAttributes().build());
        event.put(BROWN_BEAR.get(), BrownBearEntity.createAttributes().build());
        event.put(MANTIS.get(), MantisEntity.createAttributes().build());
        event.put(PENGUIN.get(), PenguinEntity.createAttributes().build());
        event.put(EAGLE.get(), EagleEntity.createAttributes().build());
        event.put(BACTRIAN_CAMEL.get(), BactrianCamel.createAttributes().build());
        event.put(BELUGA_STURGEON.get(), BelugaSturgeonEntity.createAttributes().build());
        event.put(STOAT.get(), StoatEntity.createAttributes().build());
        event.put(PHEASANT.get(), PheasantEntity.createAttributes().build());
        event.put(CHIMPANZEE.get(), ChimpanzeeEntity.createAttributes().build());
        event.put(SAOLA.get(), SaolaEntity.createAttributes().build());
        event.put(CRYODRAKON.get(), AbstractLargeAzhdarchidEntity.createAttributes().build());
        event.put(FLAMINGO.get(), FlamingoEntity.createAttributes().build());
        event.put(ANACONDA.get(), AnacondaEntity.bakeAttributes().build());
        event.put(ANACONDA_PART.get(), AnacondaPartEntity.bakeAttributes().build());
        event.put(FISHER.get(), FisherEntity.createAttributes().build());
        event.put(HOATZIN.get(), HoatzinEntity.createAttributes().build());
        event.put(DIPLODOCUS.get(), DiplodocusEntity.createAttributes().build());
        event.put(ROADRUNNER.get(), RoadrunnerEntity.createAttributes().build());
        event.put(HARE.get(), HareEntity.createAttributes().build());
        event.put(CICADA.get(), CicadaEntity.createAttributes().build());
        event.put(HYPNOVENATOR.get(), HypnovenatorEntity.createAttributes().build());
        event.put(VELOCIRAPTOR.get(), VelociraptorEntity.createAttributes().build());
        event.put(DEER.get(), DeerEntity.createAttributes().build());
        event.put(ROE_DEER.get(), RoeDeerEntity.createAttributes().build());
        event.put(GALLIMIMUS.get(), GallimimusEntity.createAttributes().build());
        event.put(CROCODILE.get(), CrocodileEntity.createAttributes().build());
        event.put(HIPPOPOTAMUS.get(), HippopotamusEntity.createAttributes().build());
        event.put(EROMANGASAURUS.get(), EromangasaurusEntity.createAttributes().build());
        event.put(WHITE_SHARK.get(), WhiteSharkEntity.createAttributes().build());
        event.put(BEIPIAOSAURUS.get(), BeipiaosaurusEntity.createAttributes().build());
        event.put(DEARC.get(), DearcEntity.createAttributes().build());
        event.put(PHILIPPINE_EAGLE.get(), PhilippineEagleEntity.createAttributes().build());
        event.put(LION.get(), LionEntity.createAttributes().build());
    }

    @SubscribeEvent
    public static void registerSpawnPlacements(RegisterSpawnPlacementsEvent event) {
        event.register(TIGER.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(SNOW_LEOPARD.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(DOMESTIC_GOAT.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(BLACKCAP.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(BLUETHROAT.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(BULLFINCH.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(CANARY.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(CARDINAL.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(CHAFFINCH.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(GOLDCREST.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(GOLDFINCH.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(NIGHTINGALE.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(REDSTART.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(REEDLING.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(ROBIN.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(SISKIN.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(SKYLARK.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(SPARROW.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(TIT.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(WAGTAIL.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(WAXWING.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(GIRAFFE.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(SEAGULL.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(ELEPHANT.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(EARTHWORM.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(RACCOON.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(PANGOLIN.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(ZEBRA.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(BROWN_BEAR.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(MANTIS.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(PENGUIN.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, PenguinEntity::checkPenguinSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(EAGLE.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(BACTRIAN_CAMEL.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(BELUGA_STURGEON.get(), SpawnPlacementTypes.IN_WATER, Heightmap.Types.MOTION_BLOCKING, BelugaSturgeonEntity::checkBelugaSturgeonSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(CHIMPANZEE.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(SAOLA.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(CRYODRAKON.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(FLAMINGO.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, FlamingoEntity::checkFlamingoSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(ANACONDA.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(FISHER.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(HOATZIN.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(DIPLODOCUS.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(ROADRUNNER.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(HARE.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(CICADA.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(HYPNOVENATOR.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(VELOCIRAPTOR.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(DEER.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(ROE_DEER.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(GALLIMIMUS.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(CROCODILE.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(HIPPOPOTAMUS.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(EROMANGASAURUS.get(), SpawnPlacementTypes.IN_WATER, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, AirBreathingWaterAnimal::checkAirBreathingWaterAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(WHITE_SHARK.get(), SpawnPlacementTypes.IN_WATER, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, WhiteSharkEntity::checkSurfaceWaterAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(BEIPIAOSAURUS.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(DEARC.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
        event.register(LION.get(), SpawnPlacementTypes.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::checkAnimalSpawnRules, RegisterSpawnPlacementsEvent.Operation.REPLACE);
    }
}
